# September 21, 2005

library(MatchIt)

niter <- 10000
#percdropped <- c(.1, .15, .2, .25, .3, .35, .4, .45, .5, .55, .6, .65, .7, .75, .8, .85, .9)
percdropped <- ppoints(50)
percdropped <- percdropped[1:45]
covariate <- "wpnoavg3"

fdafull <- read.table("~/matchit/docs/papers/carpenter/ajps2002-full1b.txt", header=T)
fdafull$treat <- fdafull$demsnmaj
controls <- row.names(fdafull[fdafull$treat==0,])
nc <- length(controls)

covars <- c("hcomm", "hfloor",   "scomm",    "sfloor",   "prespart", "demhsmaj",
 "orderent", "stafcder", "prevgenx", "lethal",   "deathrt1", "hosp01",  
 "hospdisc", "hhosleng", "acutediz", "orphdum",  "mandiz01", "femdiz01",
 "peddiz01", "natreg",   "natregsq", "wpnoavg3", "vandavg3", "condavg3",
 "discode")

ncovars <- length(covars)

tstats <- rep(0, ncovars)
for (i in 1:ncovars) {
	temp <- t.test(fdafull[fdafull$treat==1,covars[i]], fdafull[fdafull$treat==0, covars[i]])
	tstats[i] <- temp$statistic
}
print(tstats)

tstats <- matrix(0, ncol=length(percdropped), nrow=niter)
stdbias <- matrix(0, ncol=length(percdropped), nrow=niter)
qqplots.mn <- matrix(0, ncol=length(percdropped), nrow=niter)
qqplots.md <- matrix(0, ncol=length(percdropped), nrow=niter)
qqplots.mx <- matrix(0, ncol=length(percdropped), nrow=niter)
numcontrols <- matrix(0, ncol=length(percdropped), nrow=niter)

for (i in 1:length(percdropped)) {
	print(i)
	for (j in 1:niter) {
		controls.kept <- sample(controls, (1-percdropped[i])*nc)
		newdata <- fdafull[fdafull$treat==1 | row.names(fdafull)%in%controls.kept,]

		stdbias[j,i] <- abs(mean(newdata[newdata$treat==1,covariate])-mean(newdata[newdata$treat==0,covariate]))
		temp <- t.test(newdata[newdata$treat==1,covariate], newdata[newdata$treat==0,covariate])
		tstats[j,i] <- abs(temp$statistic)

		# "Fake" matching to get qq plot statistics on "full" data set
		temp <- matchit(treat ~ wpnoavg3, data=newdata)
		sum.temp <- summary(temp)
		qqplots.md[j,i] <- sum.temp$sum.all[2,5]
		qqplots.mn[j,i] <- sum.temp$sum.all[2,6]
		qqplots.mx[j,i] <- sum.temp$sum.all[2,7]

		numcontrols[j,i] <- sum(newdata$treat==0)
	}
}

tstats.sum <- matrix(0, ncol=3, nrow=length(percdropped))
stdbias.sum <- matrix(0, ncol=3, nrow=length(percdropped))
qqplots.md.sum <- matrix(0, ncol=3, nrow=length(percdropped))
qqplots.mn.sum <- matrix(0, ncol=3, nrow=length(percdropped))
qqplots.mx.sum <- matrix(0, ncol=3, nrow=length(percdropped))

tstats.sum[,1] <- apply(tstats, 2, mean)
tstats.sum[,2] <- apply(tstats, 2, quantile, probs=.025)
tstats.sum[,3] <- apply(tstats, 2, quantile, probs=.975)

stdbias.sum[,1] <- apply(stdbias, 2, mean)
stdbias.sum[,2] <- apply(stdbias, 2, quantile, probs=.025)
stdbias.sum[,3] <- apply(stdbias, 2, quantile, probs=.975)

qqplots.md.sum[,1] <- apply(qqplots.md, 2, mean)
qqplots.md.sum[,2] <- apply(qqplots.md, 2, quantile, probs=.025)
qqplots.md.sum[,3] <- apply(qqplots.md, 2, quantile, probs=.975)

qqplots.mn.sum[,1] <- apply(qqplots.mn, 2, mean)
qqplots.mn.sum[,2] <- apply(qqplots.mn, 2, quantile, probs=.025)
qqplots.mn.sum[,3] <- apply(qqplots.mn, 2, quantile, probs=.975)

qqplots.mx.sum[,1] <- apply(qqplots.mx, 2, mean)
qqplots.mx.sum[,2] <- apply(qqplots.mx, 2, quantile, probs=.025)
qqplots.mx.sum[,3] <- apply(qqplots.mx, 2, quantile, probs=.975)

numcontrols.mn <- apply(numcontrols, 2, mean)
numdropped.mn <- nc - numcontrols.mn

save(tstats.sum, stdbias.sum, qqplots.md.sum, qqplots.mn.sum, qqplots.mx.sum, percdropped, numcontrols.mn, 
	file="tstats3.Rdata")

print("Full dataset standardized bias, t-statistic, and qqplot statistics")
stdbias.full <- (mean(fdafull[fdafull$treat==1,covariate])-mean(fdafull[fdafull$treat==0,covariate]))
temp <- t.test(fdafull[fdafull$treat==1,covariate], fdafull[fdafull$treat==0,covariate])
tstat.full <- temp$statistic
temp <- matchit(treat ~ wpnoavg3, data=fdafull)
temp <- summary(temp)
qqplots.md.full <- temp$sum.all[2,5]
qqplots.mn.full <- temp$sum.all[2,6]
qqplots.mx.full <- temp$sum.all[2,7]

print(round(c(stdbias.full, tstat.full, qqplots.md.full, qqplots.mn.full, qqplots.mx.full),2))

pdf("TStatPlot.pdf")
par(mfrow=c(3,1), mar=c(4,4,3,2)+.1)
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(min(tstats.sum), max(tstats.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, tstats.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(tstats.sum), max(tstats.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, tstats.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(tstats.sum), max(tstats.sum)), xlab="Number of Controls Randomly Dropped", ylab="t-statistic", main="") 
abline(h=2)

plot(numdropped.mn, stdbias.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(min(stdbias.sum), max(stdbias.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, stdbias.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(stdbias.sum), max(stdbias.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, stdbias.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(stdbias.sum), max(stdbias.sum)), xlab="Number of Controls Randomly Dropped", ylab="Difference in Means", 
	main="") 

plot(numdropped.mn, qqplots.mn.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(min(qqplots.mn.sum), max(qqplots.mn.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(qqplots.mn.sum), max(qqplots.mn.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(qqplots.mn.sum), max(qqplots.mn.sum)), xlab="Number of Controls Randomly Dropped", 
	ylab="QQ Plot Mean Deviation", main="") 
dev.off()

pdf("TStatPlota.pdf")
par(mfrow=c(1,3))
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(min(tstats.sum), max(tstats.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, tstats.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(tstats.sum), max(tstats.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, tstats.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(tstats.sum), max(tstats.sum)), xlab="", main="t-statistic", ylab="") 
abline(h=2)

plot(numdropped.mn, stdbias.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(min(stdbias.sum), max(stdbias.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, stdbias.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(stdbias.sum), max(stdbias.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, stdbias.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(stdbias.sum), max(stdbias.sum)), xlab="Number of Controls Dropped", 
	main="Difference in Means", 
	ylab="") 

plot(numdropped.mn, qqplots.mn.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(min(qqplots.mn.sum), max(qqplots.mn.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(qqplots.mn.sum), max(qqplots.mn.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(min(qqplots.mn.sum), max(qqplots.mn.sum)), xlab="", 
	main="QQ Plot Mean Deviation", ylab="") 
dev.off()

pdf("TStatPlotb.pdf")
par(mfrow=c(3,1), mar=c(4,4,3,2)+.1)
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0, 1.5*max(tstats.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, tstats.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(0, 1.5*max(tstats.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, tstats.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(0, 1.5*max(tstats.sum)), xlab="Number of controls randomly dropped", ylab="t-statistic", main="") 
abline(h=2)

plot(numdropped.mn, stdbias.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0, 1.5*max(stdbias.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, stdbias.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(0, 1.5*max(stdbias.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, stdbias.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(0, 1.5*max(stdbias.sum)), xlab="Number of Controls Randomly Dropped", 
	ylab="Difference in Means", 
	main="") 

plot(numdropped.mn, qqplots.mn.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0,1.5*max(qqplots.mn.sum)), xlab="", ylab="", main="")
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,2], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(0, 1.5*max(qqplots.mn.sum)), xlab="", ylab="", main="") 
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,3], type="l", lty=2, xlim=c(min(numdropped.mn), max(numdropped.mn)),  
        ylim=c(0, 1.5*max(qqplots.mn.sum)), xlab="Number of Controls Randomly Dropped", 
	ylab="QQ Plot Mean Deviation", main="") 
dev.off()

pdf("TStatPlotc.pdf")
par(mfrow=c(2,1), mar=c(4,4,1,2))
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0, max(tstats.sum)), xlab="", ylab="", main="")
#axis(4, col="red", col.axis="red")
text(30, 10, labels="t-statistic", cex=0.8)
polygon(c(min(numdropped.mn)-30, min(numdropped.mn)-30, max(numdropped.mn)+30, 
	max(numdropped.mn)+30),
	c(-1, 2, 2, -1), col="darkgrey", border=NA)
text(55, 1.7, label='\"Statistical insignificance\" region', cex=0.8)
par(new=T)
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0, max(tstats.sum)), xlab="", ylab="t-statistic", main="", cex.lab=0.8)

plot(numdropped.mn, stdbias.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(20,40), xlab="", ylab="", main="", lty=1)
text(47, 26.5, labels="Difference in Means", cex=0.8)
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(20,40), xlab="Number of Controls Randomly Dropped from a Total of 245", 
	ylab="Number of Washington Post stories", main="", lty=2, cex.lab=0.8)
text(52, 36.5, labels="QQ Plot Mean Deviation", cex=0.8)
dev.off()

pdf("TStatPlotd.pdf")
par(mfrow=c(1,2), mar=c(4,4,1,2))
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0, max(tstats.sum)), xlab="", ylab="", main="")
text(30, 10, labels="t-statistic", cex=0.8)
polygon(c(min(numdropped.mn)-30, min(numdropped.mn)-30, max(numdropped.mn)+30, 
	max(numdropped.mn)+30),
	c(-1, 2, 2, -1), col="darkgrey", border=NA)
text(83, 1.7, label='\"Statistical           ', cex=0.8)
text(83, 1.3, label=' insignificance\" region', cex=0.8)
par(new=T)
plot(numdropped.mn, tstats.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(0, max(tstats.sum)), xlab="Number of Controls Randomly", ylab="t-statistic", main="", cex.lab=0.8)

plot(numdropped.mn, stdbias.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(20,40), xlab="", ylab="", main="", lty=1)
text(80, 26.5, labels="Difference in Means", cex=0.8)
par(new=T)
plot(numdropped.mn, qqplots.mn.sum[,1], type="l", xlim=c(min(numdropped.mn), max(numdropped.mn)), 
	ylim=c(20,40), xlab="Dropped from a Total of 245", 
	ylab="Number of Washington Post stories", main="", lty=2, cex.lab=0.8)
text(92, 36.5, labels="QQ Plot Mean Deviation", cex=0.8)
dev.off()


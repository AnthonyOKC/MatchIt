In this section, we describe our recommended approach
\citep{HoImaKin05}, which uses
\hlink{Zelig}{http://gking.harvard.edu/zelig/} to conduct parametric
causal inference after preprocessing the data through \MatchIt.  (The
resulting matched data sets can also be exported to other statistical
programs using commands such as {\tt write.csv()} and {\tt
  write.table()} for ASCII files, and {\tt write.dta} in {\tt foreign}
package for a STATA binary file.)  Zelig \citep{ImaKinLau04} is an
easy-to-use R package that implements a large variety of statistical
models, gives easily interpretable results by simulating quantities of
interest, provides numerical and graphical summaries, and is easily
extensible.  The package along with the complete documentation is
available at
\hlink{http://gking.harvard.edu/zelig/}{http://gking.harvard.edu/zelig/}.
\MatchIt\ and Zelig can be easily used together to enable estimation
of causal effects in very general settings with a variety of
statistical models.

The general syntax is as follows. First, we use \texttt{match.data()}
to create the matched data by excluding unmatched units from the
original data, and including information about the particular matching
procedure (i.e., weights, subclasses, and the distance measure).
<<results=hide,eval=FALSE>>=
m.data <- match.data(m.out)
@
where {\tt m.out} is the \MatchIt\ object from {\tt matchit()} and
{\tt m.data} is the resulting matched data.  Next, we analyze the
matched data set via the following command,
<<results=hide,eval=FALSE>>=
z.out <- zelig(Y ~ treat + x1 + x2, model = mymodel, data = m.data)
@
where {\tt Y} is the outcome variable, {\tt mymodel} is the selected
model, and {\tt z.out} is the output object from {\tt zelig}.

To illustrate this approach, we provide two detailed examples using
the Lalonde data. Users can run these example commands by typing {\tt
  demo(Zelig)} at the R prompt. Although we use the linear least
squares model in these examples, a wide range of other models are
available in Zelig (for the list of supported models, see
\hlink{http://gking.harvard.edu/zelig/docs/Models\_Zelig\_Can.html}{http://gking.harvard.edu/zelig/docs/Models_Zelig_Can.html}).
If you have not installed Zelig, follow the installation procedure
described at
\hlink{http://gking.harvard.edu/zelig/docs/Installation.html}{http://gking.harvard.edu/zelig/docs/Installation.html}
To load the Zelig package after installing it, type

<<>>=
library(Zelig)
@ 

\paragraph{Examples}
\begin{enumerate}
\item We begin our first example by conducting the nearest neighbor
  matching using the estimated propensity score from the logistic
  regression
<<>>=
m.out1 <- matchit(treat ~ age + educ + black + hispan + nodegree + married + re74 + re75, method = "nearest", data = lalonde)
@
Note that we skip an important step of checking balance in this
example in order to focus on the illustration of analyzing matched
data sets. We then fit the linear model to the control group
controlling for the estimated propensity score and other covariates,
<<>>=
z.out1 <- zelig(re78 ~ age + educ + black + hispan + nodegree + married + re74 + re75 + distance,
                   data = match.data(m.out1, "control"), model = "ls")
@ 
where the {\tt "control"} option in {\tt match.data()} extracts the
matched control units and {\tt ls} specifies linear regression. Note
that we need not include the treatment indicator in this regression.
Next, we set the covariates to the covariate values of the matched treated units
and use conditional prediction by setting the {\tt setx()} command optionsn to {\tt cond = TRUE} and {\tt
  fn = NULL} in order to impute the
counterfactual outcomes for the treated units. The {\tt sim()} command in
Zelig does the imputation.
<<>>=
x.out1 <- setx(z.out1, data = match.data(m.out1, "treat"), fn = NULL, cond = TRUE)
s.out1 <- sim(z.out1, x = x.out1)
@ 
Finally, we obtain a summary of the results by 
<<>>=
summary(s.out1)
@
The results indicate that the estimated average treatment effect on
the treated is 
\$\Sexpr{round(as.numeric(summary(s.out1)$qi.stats$ate.ev[1]),1)},
with a 95\% interval of
(\$\Sexpr{round(as.numeric(summary(s.out1)$qi.stats$ate.ev[3]),1)},
\$\Sexpr{round(as.numeric(summary(s.out1)$qi.stats$ate.ev[4]),1)}).

It is also possible to estimate the average treatment effects on both
the treated and the control groups. To do this, we fit the linear
model to the {\it treatment group} controlling for the propensity score (\tt{distance})
and other covariates,
<<>>=
z.out2 <- zelig(re78 ~ age + educ + black + hispan + nodegree + married + re74 + re75 + distance,
  data = match.data(m.out1, "treat"), model = "ls")
@ 
We then conduct the same simulation procedure in order to impute the
counterfactual outcome for the {\it control group},
<<>>=
x.out2 <- setx(z.out2, data = match.data(m.out1, "control"), fn = NULL, cond = TRUE)
s.out2 <- sim(z.out2, x = x.out2)
@ 
Finally, note that Zelig calculates the difference between observed
and either predicted or expected values.  This means that the
treatment effect for the control units is actually the effect of
control (observed control outcome minus the imputed outcome under
treatment from the model).  Hence, to combine treatment effects just
reverse the signs of the estimated treatment effect of controls.
<<>>=
ate.all <- c(s.out1$qi$ate.ev, -s.out2$qi$ate.ev)
@ 
The point estimate and its standard error is given by
<<>>=
mean(ate.all)
sd(ate.all)
@
The 95\% confidence interval is given by
<<>>=
quantile(ate.all, c(0.025, 0.975))
@
  
\item Our second example is subclassification. In this case, the
  average treatment effect estimates are obtained separately for each subclass
  as well as for the overall sample.  Estimating the
  treatment effects separately for each subclass, and then aggregating
  across subclasses, can significantly increase the robustness of the
  ultimate results since the parametric analysis within each subclass
  requires only local rather than global assumptions.

  We begin this example by conducting subclassification with four subclasses,
<<>>=
m.out2 <- matchit(treat ~ age + educ + black + hispan + nodegree + married + re74 + re75, data = lalonde, method = "subclass", subclass = 4)
@ 
Here, we skip the important step of checking balance in order to focus
on the illustration of analyzing subclassified data sets.  Next, we
fit the linear regression within each subclass by controlling for the
estimated propensity score and past income variables within each
subclass by using the {\tt by} option in the {\tt zelig()} command. 
<<>>=
z.out3 <- zelig(re78 ~ re74 + re75 + distance, data = match.data(m.out2, "control"), model = "ls", by = "subclass")
@ 
The same set of commands as in the first example are used to
do the imputation of the counterfactual outcomes for the treated
units.
<<>>=
x.out3 <- setx(z.out3, data = match.data(m.out2, "treat"), fn = NULL, cond = TRUE)
s.out3 <- sim(z.out3, x = x.out3)
@ 
Finally, to obtain the overall results, type
<<>>=
summary(s.out3) 
@ 
The results indicate that the estimated average treatment effect on
the treated is
\$\Sexpr{round(as.numeric(summary(s.out3)$qi.stats$ate.ev[1]),1)},
with a 95\% interval of
(\$\Sexpr{round(as.numeric(summary(s.out3)$qi.stats$ate.ev[3]),1)},
\$\Sexpr{round(as.numeric(summary(s.out3)$qi.stats$ate.ev[4]),1)}).
It is also possible to get the summary result for each subclass. For
example, the following command summarizes the result for the second
subclass.
<<>>=
summary(s.out3, subset = 2) 
@
  
\end{enumerate}


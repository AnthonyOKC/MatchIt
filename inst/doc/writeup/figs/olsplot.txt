# oldplot.txt
# Code to create plot showing dangers of OLS

n.t <- 50
n.c <- 2*n.t

x.t <- rnorm(n.t, 5.5, 1)
x.c <- rnorm(n.c, 3, 1.5)
#x.c <- x.c[x.c > 1 & x.c < 7]
#n.c <- length(x.c)
 
y.c <- exp(-x.c) + rnorm(n.c, 0, .01)

lm.y <- lm(y.c[x.c > 3.5] ~ x.c[x.c > 3.5])

y.t <- lm.y$coef[1] + lm.y$coef[2]*x.t - 0.1 + rnorm(n.t, 0, .01)

all <- as.data.frame(cbind(x=c(x.t, x.c), y=c(y.t, y.c), t=c(rep(1, n.t), rep(0, n.c))))
lm.all1 <- lm(y ~ t+x, data=all)
lm.all2 <- lm(y ~ t+x+I(x^2), data=all)
plot.pts <- sort(runif(1000, 1, 8))

pdf("olsplot1.pdf")
plot(x.t, y.t, pch="T", main="", xlab="", ylab="", xlim=c(1, 7), ylim=c(-.2, .4))
par(new=T)
plot(x.c, y.c, pch="C", main="", xlab="X", ylab="Y", xlim=c(1, 7), ylim=c(-.2, .4))
abline(lm.all1$coef[1] + lm.all1$coef[2], lm.all1$coef[3], lty=1)
abline(lm.all1$coef[1], lm.all1$coef[3], lty=1, col=8)
par(new=T)
plot(plot.pts, lm.all2$coef[1] + lm.all2$coef[2] + lm.all2$coef[3]*plot.pts + lm.all2$coef[4]*plot.pts^2, type="l", lty=2, 
	xlim=c(1,7), ylim=c(-.2, .4), xlab="", ylab="")
par(new=T)
plot(plot.pts, lm.all2$coef[1] + lm.all2$coef[3]*plot.pts + lm.all2$coef[4]*plot.pts^2, type="l", lty=2, xlim=c(1,7), ylim=c(-.2, .4), 
	xlab="", ylab="", main="Models run on full data", col=8)
legend(4.5, .35, lty=c(1, 1, 2, 2), col=c(1, 8, 1, 8), legend=c("Y~T+X, Treated Group", "Y~T+X, Control Group", "Y~T+X+X^2, Treated Group",
		"Y~T+X+X^2, Control Group"))
dev.off()

matched <- all
minx <- min(x.t)
matched <- all[all$x > minx,]

lm.m1 <- lm(y ~ t+x, data=matched)
lm.m2 <- lm(y ~ t+x+I(x^2), data=matched)

pdf("olsplot2.pdf")
plot(matched$x[matched$t==1], matched$y[matched$t==1], pch="T", main="", xlab="", ylab="", xlim=c(1, 7), ylim=c(-.2, .4))
par(new=T)
plot(matched$x[matched$t==0], matched$y[matched$t==0], pch="C", main="", xlab="X", ylab="Y", xlim=c(1, 7), ylim=c(-.2, .4))
abline(v=minx)
par(new=T)
plot(all$x[all$x < minx & all$t==0], all$y[all$x < minx & all$t==0], pch="C", main="", xlab="", ylab="", xlim=c(1,7), ylim=c(-.2, .4), col=8)
abline(lm.m1$coef[1] + lm.m1$coef[2], lm.m1$coef[3], lty=1)
abline(lm.m1$coef[1], lm.m1$coef[3], lty=1, col=8)
par(new=T)
plot(plot.pts, lm.m2$coef[1] + lm.m2$coef[2] + lm.m2$coef[3]*plot.pts + lm.m2$coef[4]*plot.pts^2, type="l", lty=2, 
	xlim=c(1,7), ylim=c(-.2, .4), xlab="", ylab="")
par(new=T)
plot(plot.pts, lm.m2$coef[1] + lm.m2$coef[3]*plot.pts + lm.m2$coef[4]*plot.pts^2, type="l", lty=2, xlim=c(1,7), ylim=c(-.2, .4), 
	xlab="", ylab="", main="Models run on matched data", col=8)
legend(4.5, .35, lty=c(1, 1, 2, 2), col=c(1, 8, 1, 8), legend=c("Y~T+X, Treated Group", "Y~T+X, Control Group", "Y~T+X+X^2, Treated Group",
		"Y~T+X+X^2, Control Group"))
dev.off()




###################################################




#dev.off()

#x11()
#plot(x.t, y.t, pch="T", main="", xlab="", ylab="", xlim=c(min(x.t, x.c),max(x.t, x.c)), ylim=c(min(y.t, y.c),max(y.t,y.c)))
#par(new=T)
#plot(x.c, y.c, pch="C", main="", xlab="X", ylab="Y", xlim=c(min(x.t, x.c),max(x.t,x.c)), ylim=c(min(y.t,y.c),max(y.t,y.c)))
#abline(1, .5)
#abline(0, .5)


